version: '3'

networks:
  dem:
    name: dem

services:
  restapi:
    build:
      context: .
      dockerfile: Dockerfile  # Name of your Dockerfile if it's not the default "Dockerfile"
    image: restapi:v${dev}
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    environment:
      POSTGRES_DB : ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - "8000:8000"
    networks:
      - dem

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data 
    networks:
      - dem
    

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - dem
